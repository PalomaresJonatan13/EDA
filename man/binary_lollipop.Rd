% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/binary_lollipop.R
\name{binary_lollipop}
\alias{binary_lollipop}
\title{Binary Lollipop Chart}
\usage{
binary_lollipop(df, vars = NULL, percentage = FALSE)
}
\arguments{
\item{df}{A data frame or tibble.}

\item{vars}{Optional unquoted tidy-select specification of columns to plot.
If \code{NULL} (default) all binary (two-level) variables in \code{df} are used.}

\item{percentage}{Logical; if \code{FALSE} (default), absolute counts are shown
with one stem per level.  If \code{TRUE}, values are converted to percentages
and a single connector is drawn between the two points.}
}
\value{
Invisibly returns \code{NULL}.  The primary side effect is printing the
lollipop plot.
}
\description{
\code{binary_lollipop()} creates a single horizontal lollipop plot for each
selected dichotomous (binary) variable in a data frame.  Levels are ordered
according to existing factor levels (if set) or by ascending frequency.
}
\details{
\itemize{
\item Only variables with exactly two distinct non-missing values are retained.
\item If a column is a factor, its \code{levels()} determine the order of the two
categories; otherwise, levels are sorted by increasing frequency.
\item When \code{percentage = TRUE}, each variable’s values are rescaled to percentages,
and a grey segment connects the minimum and maximum point.
\item When \code{percentage = FALSE}, stems are drawn from zero to each level’s value,
colored by level (\code{"#008"} for first, \code{"#800"} for second), with the longer
stem drawn first so both remain visible.
}
}
\examples{
# Example with built-in mtcars (treat am as binary)
mtcars$am <- factor(mtcars$am, levels = c(0, 1), labels = c("Auto", "Manual"))
binary_lollipop(mtcars, vars = c(am), percentage = FALSE)

# Percentage mode
binary_lollipop(mtcars, vars = am, percentage = TRUE)

}
