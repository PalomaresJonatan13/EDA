% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/select_numeric.R
\name{select_numeric}
\alias{select_numeric}
\title{Select numeric columns with optional allowance for empty result}
\usage{
select_numeric(df, vars = NULL, empty = FALSE, stop_msg = NULL)
}
\arguments{
\item{df}{A data frame or tibble.}

\item{vars}{Unquoted tidy-select specification of columns to keep before
numeric filtering (e.g. \code{c(a, b, starts_with("x"))}).  If \code{NULL}, all
columns are used.  If the argument is omitted entirely, the function
throws an error.}

\item{empty}{Logical; if \code{FALSE} (default), the function errors when zero
numeric columns are found after filtering.  If \code{TRUE}, it returns the
(empty) numeric data frame without error.}

\item{stop_msg}{Optional character string to override the default error
message when no numeric columns remain.}
}
\value{
A data frame containing only the numeric columns from the (possibly
subsetted) input.  If no numeric columns are found and \code{empty = FALSE}, an
error is thrown; if \code{empty = TRUE}, an empty data frame is returned.
}
\description{
\code{select_numeric()} filters a data frame to retain only numeric columns,
optionally pre-subsetting to a set of variables.  By default it will error
if no numeric columns remain; set \code{empty = TRUE} to return an empty data
frame instead.
}
\details{
\itemize{
\item Captures \code{vars} with \code{rlang::enquo()} and applies it via \code{dplyr::select()}
when provided.
\item Uses \code{dplyr::where(is.numeric)} to filter to numeric columns.
\item If \code{vars} is missing entirely, a \code{"Missing variables"} error is raised.
\item Customize the error message for no-numerics via \code{stop_msg}.
}
}
\examples{
# All numeric columns in mtcars
select_numeric(mtcars)

# Pre-filter then select numeric: Sepal.Length from iris
select_numeric(iris, c(Sepal.Length, Species))

# Return empty data frame instead of error
select_numeric(iris, Species, empty = TRUE)

}
